#!/bin/bash
#
# Install:
# bash <(curl -s http://nicinabox.com/boxcar/install)
#

ARGS=(${@})
echo "Hi! You're about to install Boxcar for unRAID. We'll get you setup with a new web interface and command line tool. Then, we'll import settings from your existing unRAID configuration".
printf "Cool? [y/N] "
read install_boxcar

if [[ $install_boxcar != "y" ]]; then
  echo "Bummer, dude."
  exit
fi

host='https://github.com/nicinabox/boxcar/archive/'

if [[ ${ARGS[0]} == '' ]]; then
  version="master"
else
  version=${ARGS[0]}
fi

install () {
  for package in "$@"
  do
    name=`basename $package`

    if [ ! -f $name ]; then
      echo "Installing $name"
      wget -q $slack_host$package
      installpkg $name
    fi
  done
}

mkdir -p /boot/extra && cd $_

# # We gotta have better dependency management than this.
slack_host='http://slackware.cs.utah.edu/pub/slackware'
base_deps=( '/slackware-13.37/slackware/l/ncurses-5.9-i486-1.txz'
            '/slackware-13.37/slackware/l/glibc-2.13-i486-4.txz'
            '/slackware-13.37/slackware/l/libmpc-0.8.2-i486-2.txz'
            '/slackware-13.37/slackware/l/libelf-0.8.13-i486-2.txz'
            '/slackware-13.37/slackware/l/mpfr-3.0.1-i486-1.txz'

            '/slackware-13.37/slackware/d/kernel-headers-2.6.37.6_smp-x86-2.txz'
            '/slackware-13.37/slackware/d/gcc-4.5.2-i486-2.txz'
            '/slackware-13.37/slackware/d/gcc-g++-4.5.2-i486-2.txz'
            '/slackware-13.37/slackware/d/binutils-2.21.51.0.6-i486-1.txz'
            '/slackware-13.37/slackware/d/make-3.82-i486-2.txz'
            '/slackware-13.37/slackware/d/automake-1.11.1-noarch-2.txz'
            # '/slackware-13.37/slackware/d/python-2.6.6-i486-1.txz'

            '/slackware-14.0/slackware/n/openssl-1.0.1c-i486-3.txz'

            '/slackware-13.1/slackware/a/infozip-6.0-i486-1.txz'
            '/slackware-13.37/slackware/ap/sqlite-3.7.5-i486-1.txz'

            '/slackware-14.0/slackware/l/libyaml-0.1.4-i486-1.txz'
            '/slackware-14.0/slackware/d/ruby-1.9.3_p194-i486-2.txz'
            '/slackware-14.0/patches/packages/ruby-1.9.3_p448-i486-1_slack14.0.txz')

echo "Installing Boxcar..."

echo "Fetching dependencies..."
install ${base_deps[@]}

echo "gem: --no-ri --no-rdoc" > ~/.gemrc

if [[ `gem -v` != "2.0.7" ]]; then
  gem update --system
fi

if [[ `command -v bundle` == "" ]]; then
  gem install bundler
fi

dest='usr/apps/boxcar'
cd /tmp && mkdir -p build/$dest/log
wget -q --no-check-certificate $host$version.zip
unzip -q $version
mv boxcar-$version/* build/$dest

# Precompile
cd build/$dest
`bundle && rake assetpack:build`

# Install
echo "Packing..."
cd /tmp/build
makepkg -c y /boot/extra/boxcar-$version.txz >/dev/null
installpkg /boot/extra/boxcar-$version.txz >/dev/null
cd && rm -rf build/ boxcar-$version/ $version
ln -s /$dest/bin/boxcar /usr/local/sbin/boxcar
export RACK_ENV=production

cd /$dest
rake db:migrate RACK_ENV=production >/dev/null

echo "Updating /boot/config/go to start Boxcar on boot..."

if ! grep -Fxq "/boot/config/boxcar" /boot/config/go; then
  echo "/boot/config/boxcar" >> /boot/config/go
fi

cat << 'EOF' > /boot/config/boxcar
echo "gem: --no-ri --no-rdoc" >> ~/.gemrc
gem update --system
gem install bundler
export RACK_ENV=production
cd /usr/apps/boxcar; bundle
ln -s /usr/local/sbin/boxcar /usr/apps/boxcar/bin/boxcar
boxcar server:start
EOF

echo "Importing users..."
boxcar users:import

boxcar server:start

echo "=============================================="
echo " Boxcar installed!                            "
echo " Report issues at:                            "
echo "  https://github.com/nicinabox/boxcar/issues  "
echo "=============================================="
