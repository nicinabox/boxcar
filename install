---
layout: none
---

#!/bin/bash
#
# Install:
# bash <(curl -s http://nicinabox.com/boxcar/install)
#

ARGS=(${@})
echo "Hi! You're about to install Boxcar for unRAID. We'll get you setup with a new web interface and command line tool. Then, we'll import settings from your existing unRAID configuration".
printf "Cool? [y/N] "
read install_boxcar

if [[ $install_boxcar != "y" ]]; then
  echo "Bummer, dude."
  exit
fi

host='https://github.com/nicinabox/boxcar/archive/'

if [[ ${ARGS[0]} == '' ]]; then
  version='{{ site.version }}'
else
  version=${ARGS[0]}
fi

install () {
  for package in "$@"
  do
    name=`basename $package`

    if [ ! -f $name ]; then
      echo "Installing $name"
      wget -q $slack_host$package
      installpkg $name
    fi
  done
}

install_with_trolley () {
  for package in "$@"
  do
    trolley install $package
  done
}

# Install trolley
wget -qO- https://raw.github.com/nicinabox/trolley/master/install.sh | sh -

# Install dependencies
deps = ('glibc 2.11.1'
        'ncurses 5.9'
        'libmpc 0.8.2'
        'libelf 0.8.13'
        'mpfr 3.0.1'
        'kernel-headers 2.6.37.6_smp'
        'gcc 4.5.2'
        'gcc-g++ 4.52'
        'binutils 2.21.51.0.6'
        'make 3.82'
        'automake 1.11.1'
        'openssl 1.0.1c'
        'infozip 6.0'
        'sqlite 3.7.5'
        'libyaml 0.1.4'
        'ruby 1.9.3_p194')


# TODO: Server doesn't support patches :(
slack_host='http://slackware.cs.utah.edu/pub/slackware'
base_deps=( '/slackware-13.1/patches/packages/glibc-2.11.1-i486-8_slack13.1.txz'
            '/slackware-14.0/patches/packages/ruby-1.9.3_p448-i486-1_slack14.0.txz')

echo "Installing Boxcar..."

echo "Fetching dependencies..."
install_with_trolley ${deps[@]}
install ${base_deps[@]}

echo "gem: --no-ri --no-rdoc" > ~/.gemrc

if [[ `gem -v` != "2.0.7" ]]; then
  gem update --system
fi

if [[ `command -v bundle` == "" ]]; then
  gem install bundler
fi

dest='usr/apps/boxcar'
cd /tmp && mkdir -p build/$dest/log
wget -q --no-check-certificate $host$version.zip
unzip -q $version
mv boxcar-$version/* build/$dest
mv build/$dest/boot build/
rm -rf build/$dest/test

# Precompile
cd build/$dest
bundle && rake assetpack:build

# Install
echo "Packing..."
cd /tmp/build
makepkg -c y /boot/extra/boxcar-$version.txz >/dev/null
installpkg /boot/extra/boxcar-$version.txz >/dev/null
cd /tmp && rm -rf build/ boxcar-$version/ $version
ln -s /$dest/bin/boxcar /usr/local/bin/boxcar

cd /$dest
rake db:migrate RACK_ENV=production >/dev/null

echo "Updating /boot/config/go to start Boxcar on boot..."

if ! grep -Fxq "/boot/config/boxcar" /boot/config/go; then
  echo "/boot/config/boxcar" >> /boot/config/go
fi

boxcar server:start

echo "==================================================================="
echo " Boxcar installed! Visit http://`hostname`:3000 for awesomeness    "
echo " Report issues at:                                                 "
echo "  https://github.com/nicinabox/boxcar/issues                       "
echo "==================================================================="
